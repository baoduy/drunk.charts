{{- $root := . }}
{{- range $k, $v := .Values.proxies }}
{{- if or $v.enabled (eq $v.enabled nil) }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-{{ $k }}-ingress-proxy
  labels: {{ include "app.labels" $root | nindent 4 }}
  {{- with $v.annotations }}
  annotations:
    {{- if $v.backendTlsCert}}
    nginx.ingress.kubernetes.io/proxy-ssl-secret: "{{$root.Release.Namespace}}/tls-{{ $k }}-ingress-proxy"
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    nginx.ingress.kubernetes.io/proxy-ssl-name: "{{$v.targetHost}}"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    {{- end }}
    nginx.ingress.kubernetes.io/upstream-vhost: "{{$v.targetHost}}"
    nginx.ingress.kubernetes.io/use-proxy-protocol: "true"
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ $v.ingressClassName | default "nginx" }}
  {{- if $v.tlsSecret }}
  tls:
    - hosts:
        - {{ $v.ingressHost | default nil }}
      secretName: {{ $v.tlsSecret }}
  {{- end }}
  rules:
  - host: {{ $v.ingressHost | default nil }}
    http:
      paths:
      - path: {{ default (print "/" $k) $v.ingressPath }}
        pathType: Prefix
        backend:
          service:
            name: nginx-{{ $k }}-proxy-svc
            port:
              number: {{ $v.targetPort | default 443 }}
{{- end }}
{{- end }}