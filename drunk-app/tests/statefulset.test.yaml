suites: StatefulSet Template Test Suite

templates:
  - statefulset.yaml
tests:
  - it: should not create a StatefulSet when statefulsetEnabled is false
    set:
      global: {}
      statefulset:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should create a StatefulSet with default values
    set:
      statefulset:
        enabled: true
        replicaCount: 1
        ports:
          http: 8080
      app:
        fullname: test-statefulset
        name: test-app
        labels:
          app: test-app
      global:
        image: nginx
        tag: latest
      podSecurityContext: {}
      securityContext: {}
      resources: {}
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: StatefulSet
      - equal:
          path: metadata.name
          value: "RELEASE-NAME-drunk-app"
      - isSubset:
          path: metadata.labels
          content:
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: drunk-app
            app.kubernetes.io/version: latest
      - equal:
          path: spec.replicas
          value: 1
      - equal:
          path: spec.template.spec.containers[0].image
          value: "nginx:latest"
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8080
      - equal:
          path: spec.serviceName
          value: "RELEASE-NAME-drunk-app"

  - it: should configure StatefulSet-specific features
    set:
      statefulset:
        enabled: true
        replicaCount: 3
        podManagementPolicy: Parallel
        updateStrategy:
          type: RollingUpdate
        volumeClaimTemplates:
          - name: data
            accessModes: ["ReadWriteOnce"]
            storageClassName: standard
            resources:
              requests:
                storage: 1Gi
      global:
        image: custom-image
        tag: "1.2.3"
    asserts:
      - equal:
          path: spec.podManagementPolicy
          value: Parallel
      - isNotEmpty:
          path: spec.volumeClaimTemplates
      - equal:
          path: spec.volumeClaimTemplates[0].spec.accessModes[0]
          value: ReadWriteOnce

  - it: should respect custom probes and security settings
    set:
      statefulset:
        enabled: true
        ports:
          http: 9090
        liveness: "/health"
        readiness: "/ready"
      global:
        imagePullSecret: my-secret
        image: custom-image
        tag: "1.2.3"
        imagePullPolicy: IfNotPresent
      podSecurityContext:
        runAsUser: 1000
      securityContext:
        allowPrivilegeEscalation: false
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets[0].name
          value: "my-secret"
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.path
          value: "/health"
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.path
          value: "/ready"
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 1000
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false

  - it: should configure init containers
    set:
      statefulset:
        enabled: true
      global:
        initContainer:
          image: "init-image-name:tag"
          command: "echo Init complete;"
    asserts:
      - isNotEmpty:
          path: spec.template.spec.initContainers
      - equal:
          path: spec.template.spec.initContainers[0].image
          value: "init-image-name:tag"
