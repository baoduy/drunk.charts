suites: Ingress Template Test Suite
templates:
- ingress.yaml
tests:
- it: should not create an Ingress when ingress is disabled
  set:
    ingress:
      enabled: false
  asserts:
  - hasDocuments:
      count: 0

- it: should create an Ingress with default service port when enabled
  set:
    app:
      fullname: test-app
      labels:
        app: test-app
    ingress:
      enabled: true
      hosts:
      - host: "example.com"
    service: {}
  asserts:
  - hasDocuments:
      count: 1
  - isKind:
      of: Ingress
  - equal:
      path: metadata.name
      value: "RELEASE-NAME-drunk-app"
  - equal:
      path: spec.rules[0].http.paths[0].backend.service.port.number
      value: 80

- it: should respect custom service port
  set:
    service:
      port: 8080
    ingress:
      enabled: true
      hosts:
      - host: "custom-port.com"
  asserts:
  - equal:
      path: spec.rules[0].http.paths[0].backend.service.port.number
      value: 8080

- it: should apply ingress annotations when provided
  set:
    service: {}
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: "/"
      hosts:
      - host: "annotated-host.com"
  asserts:
  - matchRegex:
      path: metadata.annotations['nginx.ingress.kubernetes.io/rewrite-target']
      pattern: "/"

- it: should setup TLS when configured
  set:
    service: {}
    ingress:
      enabled: true
      tls: test-tls-secret
      hosts:
      - host: "secure.example.com"
  asserts:
  - isNotEmpty:
      path: spec.tls

- it: should configure multiple hosts correctly
  set:
    service: {}
    ingress:
      enabled: true
      hosts:
      - host: "example.com"
      - host: "another-example.com"
  asserts:
  - hasDocuments:
      count: 1
  - equal:
      path: spec.rules[0].host
      value: "example.com"
  - equal:
      path: spec.rules[1].host
      value: "another-example.com"
